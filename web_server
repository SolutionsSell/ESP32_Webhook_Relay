import network
import socket
import machine
import json

led = machine.Pin(2, machine.Pin.OUT)  # Onboard LED

def connect_to_network:
    sta_if = network.WLAN(network.STA_IF); sta_if.active(True) # define sta_if
    sta_if.connect("<ssid>", "<password>") # connect to wifi
    print(network.WLAN(network.STA_IF).ifconfig()) # print ip address
    
def parse_request(request):
    """Extract JSON payload from POST request"""
    try:
        json_start = request.find("\r\n\r\n") + 4  # Find start of body
        if json_start < 4:
            return {}

        json_data = request[json_start:].strip()  # Extract JSON body
        print("Extracted JSON:", json_data)  # Debugging output

        return json.loads(json_data)  # Convert to dictionary
    except Exception as e:
        print("Error parsing request:", e)
        return {}

def web_page():
    """Simple status page"""
    led_state = "ON" if led.value() else "OFF"
    return f"""
    HTTP/1.1 200 OK
    Content-Type: text/html

    <!DOCTYPE html>
    <html>
    <head><title>ESP32 Web Server</title></head>
    <body>
        <h1>ESP32 Web Server</h1>
        <p>LED is <strong>{led_state}</strong></p>
    </body>
    </html>
    """

# Start web server
addr = socket.getaddrinfo("0.0.0.0", 80)[0][-1]
s = socket.socket()
s.bind(addr)
s.listen(5)

print("Web server running...")

while True:
    conn, addr = s.accept()
    request = conn.recv(2048).decode()  # Increased buffer size
    print("Request:", request)  # Debugging output

    if "POST" in request:  # Expecting a webhook
        data = parse_request(request)

        if "data" in data:
            event_type = data["data"].get("event_type", "")
            
            if event_type == "armed":
                print("üîµ Site ARMED - Turning LED ON")
                led.value(1)  # Turn LED on
            elif event_type == "disarmed":
                print("‚ö´ Site DISARMED - Turning LED OFF")
                led.value(0)  # Turn LED off
            else:
                print(f"‚ÑπÔ∏è Unhandled event: {event_type}")
        
        response = "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\"status\":\"ok\"}"
    else:
        response = web_page()

    conn.send(response)
    conn.close()

